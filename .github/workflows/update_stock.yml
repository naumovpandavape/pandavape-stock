name: Update Stock Data
on:
  schedule:
    - cron: '*/30 * * * *'  # Каждые 30 минут
  workflow_dispatch:         # Ручной запуск

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install requests

      - name: Run Moysklad script
        env:
          MOYSKLAD_API_TOKEN: ${{ secrets.MOYSKLAD_API_TOKEN }}
        run: python moysklad.py

      - name: Commit and push changes
        env:
          GH_TKN: ${{ secrets.GH_TKN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin "https://x-access-token:$GH_TKN@github.com/naumovpandavape/pandavape-stock.git"
          git add stock_data.json
          if git diff --cached --quiet; then
            echo "::notice:: Нет изменений для коммита"
          else
            git commit -m "Auto-update stock data ($(date +'%Y-%m-%d %H:%M'))"
            git push origin main
          fi

      - name: Update Gist
        env:
          GH_TOKEN: ${{ secrets.GH_TKN }}
        run: |
          # Функция валидации Gist ID
          validate_gist_id() {
            [[ "$1" =~ ^[0-9a-f]{32}$ ]] && return 0 || return 1
          }

          # Основная логика
          if [ -f gist_id.txt ]; then
            echo "▸ Обнаружен файл gist_id.txt"
            GIST_ID=$(head -n 1 gist_id.txt | tr -d '[:space:]')
            
            if validate_gist_id "$GIST_ID"; then
              echo "▸ Обновляю существующий Gist ($GIST_ID)"
              if ! gh gist edit "$GIST_ID" \
                   --file stock_data.json \
                   --desc "Stock data $(date +'%Y-%m-%d %H:%M')"; then
                echo "::error:: Ошибка обновления Gist. Проверьте ID и права доступа."
                exit 1
              fi
            else
              echo "::error:: Неверный формат Gist ID: '$GIST_ID'"
              exit 1
            fi
          else
            echo "▸ Создаю новый Gist..."
            GIST_URL=$(gh gist create stock_data.json \
              --public=false \
              --desc "Stock data $(date +'%Y-%m-%d %H:%M')")
            GIST_ID=$(echo "$GIST_URL" | grep -oE '[0-9a-f]{32}' | head -n 1)
            
            if validate_gist_id "$GIST_ID"; then
              echo "$GIST_ID" > gist_id.txt
              git add gist_id.txt
              git commit -m "Add Gist ID file"
              git push origin main
              echo "▸ Новый Gist создан: $GIST_ID"
            else
              echo "::error:: Не удалось извлечь Gist ID из URL: $GIST_URL"
              exit 1
            fi
          fi

          # Вывод ссылок
          echo "::notice:: Gist URL: https://gist.github.com/$GIST_ID"
          echo "::notice:: RAW URL (для Tilda): https://gist.githubusercontent.com/naumovpandavape/$GIST_ID/raw/stock_data.json"
